{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"-- don't edit\nmanager.activate()\nunit.stopTimer(\"on\")\n","filter":{"args":[{"value":"on"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"0"},{"code":"-- don't edit\nmanager.deactivate()\nmanager.deactivate() -- because one isn't enough sometimes\nmanager.deactivate() -- because one isn't enough sometimes","filter":{"args":[],"signature":"onStop()","slotKey":"-1"},"key":"1"},{"code":"-- https://github.com/squizzlabs/du-tiny-factory\n-- For the latest versions of pb and screen software, freely available.\n-- For support, please visit our discord channel:\n-- https://discord.com/channels/760240626942869546/1078009204792631437\n\nlocal factory_desc = \"E19 OTV Parts Kits\" -- \n\nlocal items = {} -- don't modify this line\n\n--- e19-otv.parts_list START ---\nitems[3790013467] = 30 -- adjustor m\nitems[2125213321] = 3 -- basic container l\nitems[913372512] = 8 -- basic vertical booster m\nitems[373359444] = 1 -- container hub xs\nitems[812400865] = 1 -- databank xs\nitems[183890525] = 1 -- dynamic core unit s\nitems[286542481] = 1 -- emergency controller xs\nitems[3287187256] = 1 -- emitter s\nitems[2169816178] = 2 -- encampment chair s\nitems[2585415184] = 1 -- gyroscope xs\nitems[297147615] = 2 -- hatch s\nitems[787207321] = 8 -- headlight xs\nitems[1744160618] = 1 -- hovercraft seat controller s\nitems[1884031929] = 4 -- landing gear s\nitems[2896791363] = 1 -- manual button s\nitems[4181147843] = 1 -- manual switch xs\nitems[3642010398] = 1 -- modern transparent screen xs\nitems[1261703398] = 1 -- navigator chair s\nitems[3415128439] = 1 -- programming board xs\nitems[1694177571] = 3 -- relay xs\nitems[1452351552] = 3 -- retro-rocket brake l\nitems[3243532126] = 6 -- retro-rocket brake m\nitems[773467906] = 2 -- space fuel tank m\nitems[1790622152] = 1 -- space fuel tank s\nitems[4118496992] = 1 -- space radar s\nitems[3981684520] = 2 -- square light s\nitems[177821174] = 6 -- square light xs\nitems[4145570204] = 4 -- steel panel s\nitems[273900142] = 2 -- uncommon freight space engine l\nitems[613453124] = 1 -- uncommon maneuver space engine l\nitems[529520576] = 12 -- uncommon military space engine s\nitems[3231255047] = 1 -- vertical light s\nitems[3923388834] = 2 -- Vertical Light xs\nitems[242448402] = 11 -- window s\n----- ---\nitems[3992873999] = 43 -- galvanized dark blue steel\nitems[2531477149] = 16 -- glossy aluminium\nitems[311094744] = 13 -- glossy blue plastic\nitems[1461667403] = 2 -- glossy dark blue plastic\nitems[1066805888] = 2 -- glossy orange plastic\nitems[2009619883] = 1 -- luminescent orange glass\nitems[3708327780] = 1 -- luminescent red glass\nitems[1268122879] = 1 -- luminescent white glass\nitems[354467401] = 16 -- polished black aluminium\nitems[83420134] = 160 -- white pattern plastic\n--- e19-otv.parts_list END ---\n\ndatabank_clear = false --global ... no, do NOT clear the databank next time this starts\n---> databank_clear = true  --global ... yes, DO clear the databank next time this starts\n-- don't modify the following\nif databank_clear == true then databank.clear() end\n\ndatabank.setStringValue(\"orders\", serialize(items));\ndatabank.setStringValue(\"factory_desc\", factory_desc)\nmanager.deactivate()\nunit.setTimer(\"on\", 0.1)\n\nif screen then screen.activate() end\n\n","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"2"},{"code":"for slot_name, slot in pairs(unit) do\n    if type(slot) == \"table\" and type(slot.export) == \"table\" and slot.getClass then\n        slotClass = slot.getClass():lower()\n        if slotClass == 'databankunit' then\n            databank = slot\n        elseif slotClass:sub(0,5) == \"screen\" then\n            screen = slot\n        elseif slotClass == \"manualswitchunit\" then\n            manager = slot\n        end\n    end\nend\n\n\nlocal concat = table.concat\nlocal sFormat=string.format\n\nlocal function internalSerialize(table, tC, t)\n    t[tC] = \"{\"\n    tC = tC + 1\n    if #table == 0 then\n        local hasValue = false\n        for key, value in pairs(table) do\n            hasValue = true\n            local keyType = type(key)\n            if keyType == \"string\" then\n                t[tC] = sFormat(\"[%q]=\", key)\n            elseif keyType == \"number\" then\n                t[tC] = \"[\" .. key .. \"]=\"\n            elseif keyType == \"boolean\" then\n                t[tC] = \"[\" .. tostring(key) .. \"]=\"\n            else\n                t[tC] = \"notsupported=\"\n            end\n            tC = tC + 1\n\n            local check = type(value)\n            if check == \"table\" then\n                tC = internalSerialize(value, tC, t)\n            elseif check == \"string\" then\n                t[tC] = sFormat(\"%q\", value)\n            elseif check == \"number\" then\n                t[tC] = value\n            elseif check == \"boolean\" then\n                t[tC] = tostring(value)\n            else\n                t[tC] = '\"Not Supported\"'\n            end\n            t[tC + 1] = \",\"\n            tC = tC + 2\n        end\n        if hasValue then\n            tC = tC - 1\n        end\n    else\n        for i = 1, #table do\n            local value = table[i]\n            local check = type(value)\n            if check == \"table\" then\n                tC = internalSerialize(value, tC, t)\n            elseif check == \"string\" then\n                t[tC] = sFormat(\"%q\", value)\n            elseif check == \"number\" then\n                t[tC] = value\n            elseif check == \"boolean\" then\n                t[tC] = tostring(value)\n            else\n                t[tC] = '\"Not Supported\"'\n            end\n            t[tC + 1] = \",\"\n            tC = tC + 2\n        end\n        tC = tC - 1\n    end\n    t[tC] = \"}\"\n    return tC\nend\n\nfunction serialize(value)\n    local t = {}\n    local check = type(value)\n\n    if check == \"table\" then\n        internalSerialize(value, 1, t)\n    elseif check == \"string\" then\n        return sFormat(\"%q\", value)\n    elseif check == \"number\" then\n        return value\n    elseif check == \"boolean\" then\n        return tostring(value)\n    else\n        return '\"Not Supported\"'\n    end\n\n    return concat(t)\nend\n\nfunction deserialize(s)\n    return load(\"return \" .. s)()\nend\n","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"3"}],"methods":[],"events":[]}
