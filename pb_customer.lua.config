{
  "slots": {
    "0": {
      "name": "slot1",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "1": {
      "name": "slot2",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "2": {
      "name": "slot3",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "3": {
      "name": "slot4",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "4": {
      "name": "slot5",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "5": {
      "name": "slot6",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "6": {
      "name": "slot7",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "7": {
      "name": "slot8",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "8": {
      "name": "slot9",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "9": {
      "name": "slot10",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "10": {
      "name": "slot11",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "11": {
      "name": "slot12",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "12": {
      "name": "slot13",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "13": {
      "name": "slot14",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "14": {
      "name": "slot15",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "15": {
      "name": "slot16",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "16": {
      "name": "slot17",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "17": {
      "name": "slot18",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "18": {
      "name": "slot19",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "19": {
      "name": "slot20",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "20": {
      "name": "slot21",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "21": {
      "name": "slot22",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "22": {
      "name": "slot23",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "23": {
      "name": "slot24",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "24": {
      "name": "slot25",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "25": {
      "name": "slot26",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "26": {
      "name": "slot27",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "27": {
      "name": "slot28",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "28": {
      "name": "slot29",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "29": {
      "name": "slot30",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "30": {
      "name": "slot31",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "31": {
      "name": "slot32",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "32": {
      "name": "slot33",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "33": {
      "name": "slot34",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "34": {
      "name": "slot35",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "35": {
      "name": "slot36",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "36": {
      "name": "slot37",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "37": {
      "name": "slot38",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "38": {
      "name": "slot39",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "39": {
      "name": "slot40",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "40": {
      "name": "slot41",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "41": {
      "name": "slot42",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "42": {
      "name": "slot43",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "43": {
      "name": "slot44",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "44": {
      "name": "slot45",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "45": {
      "name": "slot46",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "46": {
      "name": "slot47",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "47": {
      "name": "slot48",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "48": {
      "name": "slot49",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "49": {
      "name": "slot50",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "50": {
      "name": "slot51",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "51": {
      "name": "slot52",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "52": {
      "name": "slot53",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "53": {
      "name": "slot54",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "54": {
      "name": "slot55",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "55": {
      "name": "slot56",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "56": {
      "name": "slot57",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "57": {
      "name": "slot58",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "58": {
      "name": "slot59",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "59": {
      "name": "slot60",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "60": {
      "name": "slot61",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "61": {
      "name": "slot62",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "62": {
      "name": "slot63",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "63": {
      "name": "slot64",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "64": {
      "name": "slot65",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "65": {
      "name": "slot66",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "66": {
      "name": "slot67",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "67": {
      "name": "slot68",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "68": {
      "name": "slot69",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "69": {
      "name": "slot70",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "70": {
      "name": "slot71",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "71": {
      "name": "slot72",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "72": {
      "name": "slot73",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "73": {
      "name": "slot74",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "74": {
      "name": "slot75",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "75": {
      "name": "slot76",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "76": {
      "name": "slot77",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "77": {
      "name": "slot78",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "78": {
      "name": "slot79",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "79": {
      "name": "slot80",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "80": {
      "name": "slot81",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "81": {
      "name": "slot82",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "82": {
      "name": "slot83",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "83": {
      "name": "slot84",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "84": {
      "name": "slot85",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "85": {
      "name": "slot86",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "86": {
      "name": "slot87",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "87": {
      "name": "slot88",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "88": {
      "name": "slot89",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "89": {
      "name": "slot90",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "90": {
      "name": "slot91",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "91": {
      "name": "slot92",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "92": {
      "name": "slot93",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "93": {
      "name": "slot94",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "94": {
      "name": "slot95",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "95": {
      "name": "slot96",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "96": {
      "name": "slot97",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "97": {
      "name": "slot98",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "98": {
      "name": "slot99",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "99": {
      "name": "slot100",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-1": {
      "name": "unit",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-3": {
      "name": "player",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-2": {
      "name": "construct",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-4": {
      "name": "system",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-5": {
      "name": "library",
      "type": {
        "events": [],
        "methods": []
      }
    }
  },
  "handlers": [
    {
      "code": "-- don't edit\nmanager.activate()\nunit.stopTimer(\"on\")\n",
      "filter": {
        "args": [
          {
            "value": "on"
          }
        ],
        "signature": "onTimer(tag)",
        "slotKey": "-1"
      },
      "key": "0"
    },
    {
      "code": "-- don't edit\nmanager.deactivate()\nmanager.deactivate() -- because one isn't enough sometimes\nmanager.deactivate() -- because one isn't enough sometimes",
      "filter": {
        "args": [],
        "signature": "onStop()",
        "slotKey": "-1"
      },
      "key": "1"
    },
    {
      "code": "-- PB_CUSTOMER.LUA\n-- https://github.com/MichelV69/du-tiny-factory\n-- For the latest versions of pb and screen software, freely available.\n\nlocal items = {} -- don't modify this line\n\n--- << user configuration section >> ---\nlocal factory_desc = \"Classic Build\" -- If you have more than one, change this\nlocal feed_multiplier = 1.00 -- how much extra to be produced and kept waiting in the feeder bin\nlocal line_multiplier = 1.00 -- how much extra should be produced waiting to be transferred to feeder bin (will max at 1000)\nlocal num_lines       = 2 -- the number of linecook support lines\n\n--[[\nInstructions:\n\nto add an item, look it up by name on https://du-lua.dev/#/items\nand enter the value below as you see in the examples.\nLeft side is the item id, right side is the item quantity.\nThen turn this unit on!  The programming boards will work together to handle the rest\n\nWhen you change any of the item values, turn this unit off and \nthen back on for changes to take effect.\n--]]\n\n-- -- some example basic items for testing each assembly line\nitems[3923388834] = 4 -- Vertical Light XS\nitems[3231255047] = 3 -- Vertical Light S\nitems[1603266808] = 2 -- Vertical Light M\nitems[2027152926] = 1 -- Vertical Light L\n\n-- -- some example complicated items for testing your new Tiny Factory\n-- items[286542481] = 1 -- emergency control unit xs\n-- items[1866437084] = 1 -- remote controller xs\n-- |items[3663249627] = 2 -- elevator xs\n\n-- items[2093838343] = 2 -- surrogate vr station m\n-- items[3667785070] = 2 -- surrogate pod station m\n-- items[819161541] = 1 -- modern screen l\n-- items[953504975] = 2 -- Modern Transparent Screen m\n\n-- -- some really complicated items!\n-- items[774130122] = 1 -- maintenance unit xl\n-- items[2643443936] = 1 -- warp drive l\n\n-- -- a whole new Tiny Factory!!\n-- | items[521274609]   = 4 -- Basic Container m\n-- | items[1689381593]  = 1 -- Basic Container XS\n-- | items[3914155468]  = 2 -- Basic Recycler m\n-- | items[373359444]   = 5 -- Container Hub xs\n-- | items[812400865]   = 1 -- Databank xs\n-- | items[4181147843]  = 5 -- Manual Switch XS\n-- | items[3415128439]  = 6 -- Programming Board XS\n-- | items[184261558]   = 1 -- Screen M\n-- | items[184261427]   = 1 -- screen xs\n-- | items[2738359963]  = 1 -- Static Core Unit XS\n-- | items[2793358078]  = 2 -- Uncommon 3D Printer m\n-- | items[648743083]   = 2 -- Uncommon Chemical Industry m\n-- | items[2861848558]  = 2 -- Uncommon Electronics Industry m\n-- | items[2200747728]  = 2 -- Uncommon Glass Furnace m\n-- | items[2808015394]  = 2 -- Uncommon Metalwork Industry m\n-- | items[584577125]   = 2 -- Uncommon Refiner m\n-- | items[1132446360]  = 2 -- Uncommon Smelter m\n-- | \n-- | items[1762226636]  = 1 -- Uncommon Assembly Line l\n-- | items[1762227855]  = 2 -- Uncommon Assembly Line m\n-- | items[1762226235]  = 1 -- Uncommon Assembly Line s\n-- | items[2480928550]  = 1 -- Uncommon Assembly Line xs\n\n-- -- Good extras for bigger DUFT builds\n\n-- | items[4139262245]  = 2 -- Transfer Unit l\n-- | items[166656023]   = 2 -- Sign xs\n-- | items[3026799987]  = 2 -- Uncommon Honeycomb Refinery m\n\n--[[\nPLEASE NOTE!\n\nIf you're looking to produce fuels, honeycombs, warp cells, etc. the current\nconfiguration does not support this.  You can set this up manually, however, by \nremoving an assembler of your choice and replacing it with the proper industry.  Link this\nnew industry to the chef (top pb under the pedestal), link the two line hubs as inputs, and\nthe output as the output.  Be sure to restart the main board on top of the pedestal.\n]]\n--- << END of user configuration section >> ---\n\npb_customer_version=\"1.2.3\"\n\ndatabank_clear = false --global ... no, do NOT clear the databank next time this starts\n--->> databank_clear = true  --global ... yes, DO clear the databank next time this starts\n\n--- ---\n-- don't modify anything below this line ... you'll just break your build\nif databank_clear == true then databank.clear() end\n\ndatabank.setStringValue(\"pb_customer_version\", pb_customer_version)\ndatabank.setFloatValue(\"feed_multiplier\", feed_multiplier)\ndatabank.setFloatValue(\"line_multiplier\", line_multiplier)\ndatabank.setIntValue(\"num_lines\", num_lines)\n\ndatabank.setStringValue(\"orders\", serialize(items));\ndatabank.setStringValue(\"factory_desc\", factory_desc)\nmanager.deactivate()\nunit.setTimer(\"on\", 0.1)\n\nif screen then screen.activate() end\n\n--- eof --- \n",
      "filter": {
        "args": [],
        "signature": "onStart()",
        "slotKey": "-1"
      },
      "key": "2"
    },
    {
      "code": "for slot_name, slot in pairs(unit) do\n    if type(slot) == \"table\" and type(slot.export) == \"table\" and slot.getClass then\n        slotClass = slot.getClass():lower()\n        if slotClass == 'databankunit' then\n            databank = slot\n        elseif slotClass:sub(0,5) == \"screen\" then\n            screen = slot\n        elseif slotClass == \"manualswitchunit\" then\n            manager = slot\n        end\n    end\nend\n\n\nlocal concat = table.concat\nlocal sFormat=string.format\n\nlocal function internalSerialize(table, tC, t)\n    t[tC] = \"{\"\n    tC = tC + 1\n    if #table == 0 then\n        local hasValue = false\n        for key, value in pairs(table) do\n            hasValue = true\n            local keyType = type(key)\n            if keyType == \"string\" then\n                t[tC] = sFormat(\"[%q]=\", key)\n            elseif keyType == \"number\" then\n                t[tC] = \"[\" .. key .. \"]=\"\n            elseif keyType == \"boolean\" then\n                t[tC] = \"[\" .. tostring(key) .. \"]=\"\n            else\n                t[tC] = \"notsupported=\"\n            end\n            tC = tC + 1\n\n            local check = type(value)\n            if check == \"table\" then\n                tC = internalSerialize(value, tC, t)\n            elseif check == \"string\" then\n                t[tC] = sFormat(\"%q\", value)\n            elseif check == \"number\" then\n                t[tC] = value\n            elseif check == \"boolean\" then\n                t[tC] = tostring(value)\n            else\n                t[tC] = '\"Not Supported\"'\n            end\n            t[tC + 1] = \",\"\n            tC = tC + 2\n        end\n        if hasValue then\n            tC = tC - 1\n        end\n    else\n        for i = 1, #table do\n            local value = table[i]\n            local check = type(value)\n            if check == \"table\" then\n                tC = internalSerialize(value, tC, t)\n            elseif check == \"string\" then\n                t[tC] = sFormat(\"%q\", value)\n            elseif check == \"number\" then\n                t[tC] = value\n            elseif check == \"boolean\" then\n                t[tC] = tostring(value)\n            else\n                t[tC] = '\"Not Supported\"'\n            end\n            t[tC + 1] = \",\"\n            tC = tC + 2\n        end\n        tC = tC - 1\n    end\n    t[tC] = \"}\"\n    return tC\nend\n\nfunction serialize(value)\n    local t = {}\n    local check = type(value)\n\n    if check == \"table\" then\n        internalSerialize(value, 1, t)\n    elseif check == \"string\" then\n        return sFormat(\"%q\", value)\n    elseif check == \"number\" then\n        return value\n    elseif check == \"boolean\" then\n        return tostring(value)\n    else\n        return '\"Not Supported\"'\n    end\n\n    return concat(t)\nend\n\nfunction deserialize(s)\n    return load(\"return \" .. s)()\nend\n",
      "filter": {
        "args": [],
        "signature": "onStart()",
        "slotKey": "-5"
      },
      "key": "3"
    }
  ],
  "methods": [],
  "events": []
}
